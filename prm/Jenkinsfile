pipeline {
    agent any
    environment {
        DOCKER_REPOSITORY_URL = credentials('DOCKER_REPOSITORY_URL')
        AURORA_CLI_CONFIGURATION = credentials('clusters.json')
        DEFAULT_INVENTORY = credentials('inventory.yml')
        PRM_SUT = credentials('PRM_SUT')

        PLAYBOOK='/prm/owca/workloads/run_workloads.yaml'
        LLC_INVENTORY='/prm/demo_scenarios/complex_llc.0/inventory.yaml'
    }
    stages {
        stage("Run flake8 on PRM") {
            steps {
                sh'''
                cd prm
                tox -e flake8
                '''
            }
        }
        stage("Build owca-prm.pex") {
            steps {
                sh'''
                cd prm
                tox -e package
                '''
                stash(name: "owca-prm", includes: "prm/dist/**")
                archiveArtifacts(artifacts: "prm/dist/**")
            }
            post {
                always {
                    sh '''
                    rm -fr prm/dist
                    '''
                }
            }
        }
        stage("Run LLC experiment") {
            steps {
                sh '''
                mkdir -p ${HOME}/.aurora
                cp  ${AURORA_CLI_CONFIGURATION} ${HOME}/.aurora/clusters.json
                ansible-playbook -vvv -l ${PRM_SUT} -i ${WORKSPACE}${LLC_INVENTORY} -i ${DEFAULT_INVENTORY} ${WORKSPACE}${PLAYBOOK} --tags=twemcache_mutilate,redis_rpc_perf,cassandra_stress--cassandra
                '''
            }
            post {
                always {
                    sh '''
                    ansible-playbook -vvv -l ${PRM_SUT} -i ${DEFAULT_INVENTORY} ${WORKSPACE}${PLAYBOOK} --tags=clean_jobs
                    rm -fr ${HOME}/.aurora/
                    '''
                }
            }
        }
    }
}
